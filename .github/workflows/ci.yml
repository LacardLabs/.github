name: Reusable CI

on:
  pull_request:
  push:
    branches: [ main, master ]
  workflow_call:
    inputs:
      node-version:
        required: false
        type: string
        default: 'lts/*'
      python-version:
        required: false
        type: string
        default: '3.x'

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Python (conditional)
      - name: Set up Python
        if: ${{ hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != '' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Python deps (requirements.txt)
        if: ${{ hashFiles('requirements.txt') != '' }}
        run: python -m pip install -r requirements.txt
      - name: Python deps (pyproject)
        if: ${{ hashFiles('pyproject.toml') != '' && hashFiles('requirements.txt') == '' }}
        run: python -m pip install build pytest
      - name: Python tests
        if: ${{ hashFiles('tests/**') != '' }}
        run: pytest -q || echo "No pytest configured; skipping."

      # Node (conditional)
      - name: Set up Node
        if: ${{ hashFiles('package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}
      - name: Detect npm test script
        if: ${{ hashFiles('package.json') != '' }}
        id: node-test-script
        shell: bash
        run: |
          set +e
          test_script=$(node -pe "require('./package.json').scripts?.test" 2>/dev/null || true)
          set -e
          if [ -n "$test_script" ] && [ "$test_script" != "undefined" ]; then
            echo "has-test=true" >> "$GITHUB_OUTPUT"
            echo "Detected npm test script: $test_script"
          else
            echo "has-test=false" >> "$GITHUB_OUTPUT"
            echo "No npm test script detected; skipping npm install and tests."
          fi
      - name: Node install
        if: ${{ hashFiles('package.json') != '' && steps['node-test-script'].outputs['has-test'] == 'true' }}
        run: npm ci || npm install
      - name: Node tests
        if: ${{ hashFiles('package.json') != '' && steps['node-test-script'].outputs['has-test'] == 'true' }}
        shell: bash
        run: |
          set +e
          output=$(npm test --silent 2>&1)
          status=$?
          set -e
          printf '%s\n' "$output"
          if [ "$status" -eq 0 ]; then
            exit 0
          fi
          if echo "$output" | grep -qi "missing script: test"; then
            echo "npm test script missing; treating as skip."
            exit 0
          fi
          exit "$status"

      # Makefile fallback
      - name: Makefile
        if: ${{ hashFiles('Makefile') != '' }}
        run: make test || make ci || echo "No make test/ci target; skipping."
